name: Deploy to Amazon ECS

on:
  push:
    branches: [ "dev", "stg" ]

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: test
  ECS_SERVICE: MY_ECS_SERVICE
  ECS_CLUSTER: MY_ECS_CLUSTER
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION
  CONTAINER_NAME: MY_CONTAINER_NAME
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
        aws-region: ${{ vars.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Extract branch name and set IMAGE_TAG
      id: set_image_tag
      run: |
        # BRANCH_NAME=${{ github.ref_name }}
        IMAGE_TAG=${{ github.ref_name }}-$(echo ${{ github.sha }} | cut -c1-7)
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

