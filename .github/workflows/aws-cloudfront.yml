name: Deploy to CloudFront

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target deployment environment'
        required: true
        type: choice
        options:
          - develop
          - staging
          - production

permissions:
  id-token: write
  contents: read

jobs:
  validate-user:
    runs-on: ubuntu-latest
    steps:
      - name: Check if user is authorized
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALLOWED_USERS: ${{ vars.ALLOWED_USERS }}
        run: |
          REPO="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          ENVIRONMENT="${{ github.event.inputs.environment }}"
  
          # Chuyển đổi danh sách ALLOWED_USERS từ chuỗi sang mảng
          IFS=',' read -ra USERS <<< "$ALLOWED_USERS"
  
          # Kiểm tra nếu user có quyền admin trong repo
          IS_ADMIN=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/collaborators/$ACTOR/permission" | jq -r '.permission')
  
          # Điều kiện cho phép chạy:
          # 1. Nếu ENVIRONMENT là 'develop' và user nằm trong danh sách ALLOWED_USERS
          # 2. Nếu user có quyền 'admin'
          if [[ "$ENVIRONMENT" == "develop" && " ${USERS[@]} " =~ " ${ACTOR} " ]] || [[ "$IS_ADMIN" == "admin" ]]; then
            echo "✅ User $ACTOR is authorized to run this workflow in $ENVIRONMENT."
          else
            echo "🚫 User $ACTOR is not allowed to run this workflow in $ENVIRONMENT."
            exit 1
          fi
          
  sync-data-to-s3:
    needs: validate-user
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v3
    #   with:
    #     role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}
    #     aws-region: ${{ vars.AWS_REGION }}
          
    - name: Check ENV
      id: vars
      run: |
        echo ${{ vars.TEST_VAR }}
